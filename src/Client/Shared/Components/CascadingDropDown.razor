@using System.ComponentModel.DataAnnotations;
@inject HttpClient Http

@if (StatesDataSource != null)
{
    <EditForm Model=@district>
        <DataAnnotationsValidator />

        <div class="form-group row mt-5">
            <label for="DistrictId" class="col-sm-2 col-form-label"> Select District : </label>
            <div class="col-sm-4">
                <CustomDropdown DDName="District" DataSource="StatesDataSource" @bind-SelectedId="@district.DistrictId" IsDisabled="ShouldBeDisabled">
                </CustomDropdown>
                <ValidationMessage For="() => district.DistrictId" />
            </div>
        </div>
        <div class="form-group row mt-5">
            <label for="FeaturesDateTime" class="col-sm-2 col-form-label">Select Date : </label>
            <div class="col-sm-4">
                <input type="date" @bind="@district.FeaturesDateTime" class="form-control" id="FeaturesDateTime" placeholder="Select Date" />
                <ValidationMessage For="() => district.FeaturesDateTime" />
            </div>
        </div>

        <div class="form-group row mt-5">
            <button type="button" @onclick="OnSearch" class="btn btn-primary offset-2 col-sm-2"> Search </button>
        </div>
    </EditForm>
}

@code {
    ByDistrict district = new ByDistrict();

    [Parameter]
    public int SelectedId { get; set; }

    [Parameter]
    public EventCallback<string> SerchResult { get; set; }

    [Parameter]
    public bool ShouldBeDisabled { get; set; } = true;

    public Dictionary<int, string> StatesDataSource { get; set; }

    private void OnSearch()
    {
        if(district.DistrictId>0 && district.FeaturesDateTime.HasValue)
        {
            string apiUrl = string.Format(Constant.APIBaseUrl + Constant.FindByDistrict, district.DistrictId, district.FeaturesDateTime?.ToString("dd-MM-yyyy"));
            SerchResult.InvokeAsync(apiUrl);
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            string apiUrl = string.Format(Constant.APIBaseUrl + Constant.GetDistrictByStateId, SelectedId);
            var ListDistricts = await Http.GetFromJsonAsync<Districts>(apiUrl);
            StatesDataSource = new Dictionary<int, string>();
            foreach (var item in ListDistricts?.districts)
            {
                StatesDataSource.Add(item.district_id, item.district_name);
            }
        }
        catch (Exception Ex)
        {
            Console.WriteLine(Ex.Message);
        }
    }

    class ByDistrict
    {
        public int StateId { get; set; }

        [Required(ErrorMessage = "Please Select District")]
        public int DistrictId { get; set; }

        [Required(ErrorMessage = "Please Select Date")]
        public DateTime? FeaturesDateTime { get; set; } = DateTime.Now;

    }
}
