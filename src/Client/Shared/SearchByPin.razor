@using System.ComponentModel.DataAnnotations;

<EditForm Model=@pin>
    <DataAnnotationsValidator />
    <div class="form-group row mt-5">
        <label for="Pincode" class="col-sm-2 col-form-label">Enter Pincode : </label>
        <div class="col-sm-4">
            <input type="text" @bind-value="@pin.Pincode" class="form-control" id="Pincode" placeholder="Pincode" />
            <ValidationMessage For="() => pin.Pincode" />
        </div>
    </div>
    <div class="form-group row mt-5">
        <label for="FeaturesDateTime" class="col-sm-2 col-form-label">Select Date : </label>
        <div class="col-sm-4">
            <input type="date" @bind-value="@pin.FeaturesDateTime" class="form-control" id="FeaturesDateTime" placeholder="Select Date" />
            <ValidationMessage For="() => pin.FeaturesDateTime" />
        </div>
    </div>
    <div class="form-group row mt-5">
        <button type="submit" @onclick="OnSearch" class="btn btn-primary offset-1 col-sm-2"> Search </button>
    </div>
</EditForm>

    @code {

        ByPinCode pin = new ByPinCode();

        private void OnSearch()
        {
            if(!string.IsNullOrWhiteSpace(pin.Pincode) && pin.FeaturesDateTime.HasValue)
            {
                string apiUrl = string.Format(Constant.APIBaseUrl + Constant.FindByPin, pin.Pincode, pin.FeaturesDateTime?.ToString("dd-MM-yyyy"));
                SerchResult.InvokeAsync(apiUrl);
            }
        }

        [Parameter]
        public EventCallback<string> SerchResult { get; set; }

        class ByPinCode
        {
            [Required(ErrorMessage = "Please Enter Pincode")]
            public string Pincode { get; set; }

            [Required(ErrorMessage ="Please Select Date")]
            public DateTime? FeaturesDateTime { get; set; } = DateTime.Now;

        }

    }
